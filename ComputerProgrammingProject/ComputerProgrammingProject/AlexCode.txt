#Welcome to my computer programming project

import time
import csv


def numType(): 
	global num
	num = input()
	count = len(num)
	if (count != 4):
		print ('Only 4 digits!')
		numType()
	else: 
		settingEncrypt()	
		return()

def encryption(num):
	global a 
	global b 
	global c 
	global d 
	global encryptedNumber
	global fileNum
	global nextW


	a = num[0]
	b = num[1]
	c = num[2]
	d = num[3]

	a = int(a)+7
	b = int(b)+7
	c = int(c)+7
	d = int(d)+7
	
	a = a / 10
	b = b / 10
	c = c / 10
	d = d / 10
	

	a = str(a)
	b = str(b)
	c = str(c)
	d = str(d)
	encryptedNumber = c+d+a+b
	ogNum = encryptedNumber
	encryptedNumber = encryptedNumber.replace('0.', '')
	encryptedNumber = encryptedNumber.replace('1.', '')
	storedNum = [ogNum]
	
	Q = open('profileEncrypt.csv', 'r+', newline = '')
	writer = csv.writer(Q)
	reader = csv.reader(Q)
	rows = list(reader)
	writer.writerows(rows)
	Q.close

	Q = open('profileEncrypt.csv', 'r+', newline = '')
	writer = csv.writer(Q)
	writer.writerow(storedNum)
	Q.close()
	print('Encryption has concluded and has been stored')
	settingEncrypt()

	return()
   
	
	
	
	
	#a = (int[a] + 7) // 10
	#b = (int[b] + 7) // 10
	#c = (int[c] + 7) // 10
	#d = (int[d] + 7) // 10


def settingEncrypt(): 
	print('If you want to encrypt this number press: E or R')
	encryptER = input()
	if (encryptER == 'E'):
		numType()
	elif (encryptER == 'R'): 
		print('Loading Encryption...')
		encryption(num)
		return()
	else: 
		print ('Select E or R')
		numType()

def settingDecryption():
	Q = open('profileEncrypt.csv', 'r')
	reader = csv.reader(Q)
	localNum = 0
	for row in reader: 
		time.sleep(0.5)
		fileNum = row
		fileNum = str(fileNum)
		i = fileNum[2:5]
		j = fileNum[5:8]
		k = fileNum[8:11]
		l = fileNum[11:14]
		i = i.replace('0.', '')
		j = j.replace('0.', '')
		k = k.replace('0.', '')
		l = l.replace('0.', '')
		i = i.replace('1.', '')
		j = j.replace('1.', '')
		k = k.replace('1.', '')
		l = l.replace('1.', '')

		print(i + j + k + l) 
	Q.close()

	print ('Decrypt E or R. Please Select')

	answer = input()

	if (answer == "E"): 
		print('Decrypting...')
		Q = open('profileEncrypt.csv', 'r')
		reader = csv.reader(Q)
		localNum = 0
		for row in reader:
			time.sleep(0.5)
			folderNum = row 
			decryption(folderNum)
			localNum = localNum + 1
		Q.close()
		settingStart()
		return()
	else:
		settingStart()
		return()
	global decryptionOption

def settingStart(): 
	print("Type W to Encrypt, L to read file, T to delete file")
	response = input()
	if (response == 'W'): 
		print ("Enter a pin with 4 digits")
		numType()
		return()
	elif (response == "L"):
		settingDecryption() 
		return()
	elif (response == "T"): 
		deleteFile()
		return()
	elif(response == "Z"): 
		exit()
	else: 
		print('Must be W or L')
		time.sleep(0.5)
		settingStart()

	def deleteFile(): 
		print('Do you want to clear the file? E or R')
		answer = input()
		if(answer == "E"):
			print ('Are you positive? E or R') 
			answer = input()
			if (answer == 'R'):
				print("Canceling...")
				Q = open('profileEncrypt.csv', 'r+')
				Q.truncate()
				Q.close()
				print("ERADICATED")
				settingStart()
				return()
			elif (answer == 'R'): 
				settingStart()
				return()
			else: 
				deleteFile()
				return()
		elif (answer == 'R'):
			settingStart()
			return()
		else: 
			print('E or R')
			deleteFile()

def decryption(folderNum): 
	folderNum = str (folderNum) 
	i = folderNum[2:5]
	j = folderNum[5:8]
	k = folderNum[8:11]
	l = folderNum[11:14]
	i = float(i)
	j = float(j)
	k = float(k)
	l = float(l)

	i = i*10
	j = j*10
	k = k*10
	l = l*10

	i = str(i)
	j = str(j)
	k = str(k)
	l = str(l)

	i = i.replace('.0', '')
	j = j.replace('.0', '')
	k = k.replace('.0', '') 
	l = l.repalce('.0', '')

	i = int(i)
	j = int(j)  
	k = int(k) 
	l = int(l)
	
	i = i-7
	j = j-7
	k = k-7
	l = l-7

	i = str(i)
	j = str(j)
	k = str(k)
	l = str(l)

	result = k + l + i + j 
	result = result.replace('.0', '')

	print(result + '<<')
settingStart()

global storedNum 

exit()








 #first encryption
 #first dycryption



